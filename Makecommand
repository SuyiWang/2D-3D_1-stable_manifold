================= DiMorSC usage =============================


Execute command:
	./DiMorSC <input_file> <output_prefix> <persistence_threshold> <DIM> [saved_persist_pair]


Parameters:
	<input.sc> 	- simplicial complex file, format specified below.
	<ouput_prefix> 	- Prefix of output files
	<persistence_threshold> 	- Persistence threshold for simplification
	<DIM> 			- Dimension of points (2 or 3)
	[saved_persist_pair] 		- OPTIONAL. If specified, the program will load previously computed persistence pairing.
	argv[6] 		- reserved.

	
Input file Specification:
	The input file is composed of six blocks with the follow meaning:
	<1. num_vertices>
	<2. vertex list>
	<3. num_edges>
	<4. edge list>
	<5. num_triangles>
	<6. triangle list>
	
	1: contains a single int32 specifying the total number of vertices
	2: contains geographic information of vertices in blocks.
	   Each of the <num_vertices> blocks has the following information:
	   [v.x1 v.x2 ... v.xn v.f], xn bounded by DIM.
	   Currently, supports DIM = 2 and 3. For higher dimensions, please adjust the constant MAX_DIM in simplicial2complex.h
	   v.x_i and v.f are all of type double
	3: contains a single int32 specifying the total number of edges
	4: specifies how edges are connected using index pairs.
	   A pair [v1 v2] specifies an edge connecting vertices of 
	   index v1 and v2.
	5: contains a single int32 specifying the total number of triangles
	6: specifies how triangles are connected using index tuples.
	   A tuple [v1 v2 v3] specifies an triangles formed by connecting vertices of index v1, v2 and v3.

	   
Output Specification:
	The output are two ascii files <output_prefix>_vert.txt, [output_prefix]_edge.txt.
	See example for more input and output details.

Compile:
	g++ DiMorSC.cpp -I./phat/include -std=c++11 -o DiMorSC -w

Execute example:
	./DiMorSC data/Olfactory_OP_7_trunc.sc output/Olfactory_OP_7_trunc 1 3

Dependencies:
	DiMorSC depends on PHAT to compute persistence pairs. PHAT is available on github here (https://github.com/blazs/phat) - put PHAT file in the project root folder.
